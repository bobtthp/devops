"""
Django settings for qkyunwei project.

Generated by 'django-admin startproject' using Django 1.8.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(icy#_(#+%5o&x9@gu$0-dahl3ev=uz(44yk03bgks^x&$^ydo'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
DEBUG = False

#ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'server',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'qkyunwei.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'qkyunwei.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'servicelist',
        'USER':'bob',
        'PASSWORD':'Gzq!@#123',
        'HOST':'11.11.11.2',
        'PORT':'3306'
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE='zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_URL = '/servicelist/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

#STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#STATICFILES_DIRS = [
#    ("css", os.path.join(STATIC_ROOT, 'css')),
#    ("img", os.path.join(STATIC_ROOT, 'img')),
#    ("js", os.path.join(STATIC_ROOT, 'js')),
#]
#DEBUG = false static file
STATIC_PATH = 'C:\Users\\bobtthp\Desktop\devops\static'
STATIC_PATH1 = 'C:\Users\\bobtthp\Desktop\devops\static1'


SESSION_COOKIE_DOMAIN = None
SESSION_COOKIE_SECURE = False
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_AGE = 1800
SESSION_SAVE_EVERY_REQUEST = False
SESSION_COOKIE_AT_BROWSER_CLOSE = False


#django logging
BASE_LOG_DIR = os.path.join(BASE_DIR, "logs")
#filename = time.strftime("%Y-%m-%d_%H:%M:%S") +
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'info': {
            'format': '[%(asctime)s] - %(levelname)s(line:%(lineno)d) - %(message)s'
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'info'
        },
        'file_handlers': {
            'level': 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
			#'suffix' : "%Y%m%d-%H%M.log",
            'filename': os.path.join(BASE_LOG_DIR,"yw.log"),
            'when': 'M',
            'backupCount': 5,
            'interval' : 1,
            'formatter': 'info',
            'encoding': 'utf-8',
        },
    },
    'loggers': {
        '': {
            'handlers': ['file_handlers', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
