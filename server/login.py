#coding:utf-8from django.shortcuts import render,render_to_responsefrom django.contrib.auth import authenticate,login,logoutfrom django.shortcuts import HttpResponseRedirectfrom django.contrib.auth.hashers import make_password,check_passwordfrom django.template import RequestContextfrom django.contrib.auth.forms import AuthenticationForm,UserCreationFormfrom django.contrib.auth.models import Userfrom django.http import HttpResponseimport timedef userregist(request):    if request.method == 'POST':        registform = UserCreationForm(request.POST)        username=request.POST.get('username')        password1 = request.POST.get('password1')        password2 = request.POST.get('password2')        true_name = request.POST.get('true_name')        print true_name        user_status =  User.objects.filter(username=username)        if not user_status:            if not password1 or not password2 or password1 != password2:                passwd_status = False                #print passwd_status                return render(request,'register.html',{'passwd_status':passwd_status})            else:                if registform.is_valid():                    new_user = registform.save()                    new_user.save()                    return HttpResponseRedirect("/servicelist")        else:            return render(request,'register.html',{'user_status':user_status})    else:        registform = UserCreationForm()    return render(request,'register.html',{'registform':registform,},context_instance=RequestContext(request))def userlogin(request):    nowtime = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())    #Username = request.COOKIES.get('Username')    if request.method == 'POST':        userform = AuthenticationForm(request,data=request.POST)        print request.POST['username'], userform.is_valid()        if userform.is_valid():            #print dir(request.session)            Username = request.POST['username']            Password = request.POST['password']            user = authenticate(username=Username,password=Password)            if user is not None and user.is_active:                print Username,'login',' IP_ADDR is ',request.META['REMOTE_ADDR']                login(request,user)                response = HttpResponseRedirect("/servicelist/index")                response.set_cookie('username',Username,120)                return HttpResponseRedirect("/servicelist/index")            else:                return render_to_response('login.html',RequestContext(request, {'userform': userform, 'nowtime': nowtime,'auth_status':True}))        else:            return render_to_response('login.html', RequestContext(request, {'userform': userform, 'nowtime': nowtime,                                                                             'auth_status': True}))    else:        userform = AuthenticationForm()        return render_to_response('login.html', RequestContext(request, {'userform': userform, 'nowtime': nowtime}))def userlogout(request):    logout(request)    response = HttpResponseRedirect('/servicelist')    response.delete_cookie('username')    return HttpResponseRedirect('/servicelist')